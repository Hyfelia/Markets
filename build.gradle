/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://repo.rosewooddev.io/repository/public/')
    }

    maven {
        url = uri('https://hub.jeff-media.com/nexus/repository/jeff-media-public/')
    }

    maven {
        url = uri('https://repo.codemc.io/repository/maven-snapshots/')
    }

    maven {
        url = uri('https://maven.enginehub.org/repo/')
    }

    maven {
        url = uri('https://maven.citizensnpcs.co/repo')
    }

    maven {
        url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api 'net.wesjd:anvilgui:1.6.0-SNAPSHOT'
    api 'org.bstats:bstats-bukkit:3.0.0'
    api 'com.jeff_media:SpigotUpdateChecker:3.0.0'
    api 'com.google.code.gson:gson:2.10'
    compileOnly 'org.spigotmc:spigot-api:1.16.4-R0.1-SNAPSHOT'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.3.0-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.1.0-SNAPSHOT'
    compileOnly 'net.citizensnpcs:citizens-main:2.0.30-SNAPSHOT'
    compileOnly 'com.github.DeadSilenceIV:AdvancedChestsAPI:2.4'
    compileOnly 'org.black_ixx:playerpoints:3.2.4'
    compileOnly 'me.clip:placeholderapi:2.11.1'
    compileOnly 'net.luckperms:api:5.4'
}

group = 'RentIt'
version = '2.7.3'
description = 'RentIt'
java.sourceCompatibility = JavaVersion.VERSION_17

sourceSets {
    main { 
        java { srcDirs = ["src/main/java"] }
        resources { srcDir "src/main/resources" }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.withType(Copy).all { 
	duplicatesStrategy 'exclude' 
}
tasks.withType(Jar).all { 
	duplicatesStrategy 'exclude' 
}

jar {
    from {
        configurations.compileClasspath.findAll { file ->
            //project.logger.lifecycle("File: ${file.name}")
	        file.name != "VaultAPI-1.7.jar"
	        file.name != "placeholderapi-2.11.1.jar"
	        file.name != "api-5.4.jar"
	        file.name != "playerpoints-3.2.4.jar"
    	}.sort { it.name }
            .collect { file ->
                file.isDirectory() ? file : zipTree(file)
            }
    }
}

